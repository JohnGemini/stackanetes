apiVersion: extensions/v1beta1
kind: Deployment
spec:
  replicas: {{ deployment.compute_replicas }}
  template:
    metadata:
      labels:
        app: nova-compute
      annotations:
        {% if deployment.engine == "rkt" -%}
        rkt.alpha.kubernetes.io/stage1-name-override: coreos.com/rkt/stage1-fly
        {%- endif %}
        # TODO: When implemented upstream, replace the pod affinity with
        # requiredDuringSchedulingRequiredDuringExecution
        scheduler.alpha.kubernetes.io/affinity: >
          {
            "podAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "nova-libvirt"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            },
            "podAntiAffinity": {
              "requiredDuringSchedulingIgnoredDuringExecution": [
                {
                  "labelSelector": {
                    "matchExpressions": [
                      {
                        "key": "app",
                        "operator": "In",
                        "values": [
                          "nova-compute"
                        ]
                      }
                    ]
                  },
                  "topologyKey": "kubernetes.io/hostname"
                }
              ]
            }
          }
    spec:
      nodeSelector:
        {{ deployment.compute_node_label }}: enabled
      securityContext:
        runAsUser: 0
      hostNetwork: true
      {% if deployment.engine != "rkt" -%}
      hostPID: true
      {%- endif %}
      dnsPolicy: ClusterFirst
      terminationGracePeriodSeconds: {{ nova.drain_timeout }}
      containers:
        - name: nova-compute
          image: {{ deployment.image.compute }}
          imagePullPolicy: Always
          securityContext:
            privileged: true
          lifecycle:
            postStart:
              exec:
                command: ["python", "/tmp/hooks.py", "poststart_compute"]
            preStop:
              exec:
                command: ["python", "/tmp/hooks.py", "prestop_compute"]
          resources:
            requests:
              memory: "{{ nova.memory.request }}"
            limits:
              memory: "{{ nova.memory.limit }}"
          env:
            - name: INTERFACE_NAME
              value: {{ network.minion_interface_name }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MEM_REQUEST
              valueFrom:
                resourceFieldRef:
                  resource: requests.memory
            - name: COMMAND
              value: "bash /tmp/nova.sh"
            - name: DEPENDENCY_JOBS
              value: "nova-init,nova-post"
            - name: DEPENDENCY_SERVICE
              value: "keystone-api,nova-api"
            - name: DEPENDENCY_DAEMONSET
              value: "neutron-openvswitch"
            - name: DEPENDENCY_CONFIG
              value: "/etc/nova/nova.conf"
          volumeMounts:
            - name: novaconf
              mountPath: /configmaps/nova.conf
            - name: novash
              mountPath: /tmp/nova.sh
              subPath: nova.sh
            - name: cephconf
              mountPath: /etc/ceph/ceph.conf
              subPath: ceph.conf
            - name: cephclientcinderkeyring
              mountPath: /etc/ceph/ceph.client.{{ ceph.cinder_user }}.keyring
              subPath: ceph.client.{{ ceph.cinder_user }}.keyring
            - name: novadriverpy
              mountPath: /var/lib/kolla/venv/lib/python2.7/site-packages/nova/virt/k8slibvirt/driver.py
              subPath: driver.py
            - name: novainitpy
              mountPath: /var/lib/kolla/venv/lib/python2.7/site-packages/nova/virt/k8slibvirt/__init__.py
              subPath: __init__.py
            {% if deployment.engine != "rkt" -%}
            - mountPath: /lib/modules
              name: libmodules
              readOnly: true
            - mountPath: /sys/fs/cgroup
              name: cgroup
            {%- endif %}
            - mountPath: /var/lib/nova
              name: varlibnova
            - mountPath: /var/lib/libvirt
              name: varliblibvirt
            - mountPath: /run
              name: run
            - mountPath: /etc/resolv.conf
              name: resolvconf
              subPath: resolv.conf
            - name: openrcyaml
              mountPath: /tmp/openrc.yaml
              subPath: openrc.yaml
            - name: hookspy
              mountPath: /tmp/hooks.py
              subPath: hooks.py
      volumes:
        - name: novaconf
          configMap:
            name: nova-novaconf
        - name: novash
          configMap:
            name: nova-novash
        - name: resolvconf
          configMap:
            name: nova-resolvconf
        - name: cephconf
          configMap:
            name: nova-cephconf
        - name: cephclientcinderkeyring
          configMap:
            name: nova-cephclientcinderkeyring
        - name: libvirtdconf
          configMap:
            name: nova-libvirtdconf
        - name: virshsetsecretsh
          configMap:
            name: nova-virshsetsecretsh
        - name: novadriverpy
          configMap:
            name: nova-driverpy
        - name: novainitpy
          configMap:
            name: nova-initpy
        - name: varlibnova
          hostPath:
            path: /var/lib/nova
        - name: varliblibvirt
          hostPath:
            path: /var/lib/libvirt
        - name: run
          hostPath:
            path: /run
        {% if deployment.engine != "rkt" -%}
        - name: libmodules
          hostPath:
            path: /lib/modules
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
        {%- endif %}
        - name: openrcyaml
          configMap:
            name: nova-openrcyaml
        - name: hookspy
          configMap:
            name: nova-hookspy
